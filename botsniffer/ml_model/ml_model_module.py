import pickle
import numpy as np
from .feature_extraction import extract_features

def load_model():
    """
    Loads the pre-trained machine learning model.

    Returns:
        The loaded machine learning model.
    """
    # Load the machine learning model from a serialized file (e.g., a pickle file)
    with open("path/to/trained/model/file.pkl", "rb") as f:
        model = pickle.load(f)

    return model

def predict(source_code_file):
    """
    Makes a prediction on whether the source code in the specified file was generated by an AI bot.

    Args:
        source_code_file: The path to the source code file to analyze.

    Returns:
        A boolean value indicating whether the code was generated by an AI bot.
    """
    # Load the machine learning model
    model = load_model()

    # Extract features from the source code
    with open(source_code_file, "r") as f:
        code = f.read()
    parsed_code = ast.parse(code)
    features = extract_features(parsed_code)

    # Make a prediction using the machine learning model
    feature_vector = convert_to_feature_vector(features)
    prediction = model.predict(feature_vector)

    return bool(prediction[0])

def convert_to_feature_vector(features):
    """
    Converts the extracted features to a format suitable for the machine learning model.

    Args:
        features: A dictionary containing the extracted features.

    Returns:
        A NumPy array containing the feature values.
    """
    feature_vector = []

    # Add feature values to the feature_vector list
    for key, value in features.items():
        feature_vector.append(value)

    # Convert the feature_vector list to a NumPy array, if required by the machine learning model
    feature_vector = np.array(feature_vector).reshape(1, -1)

    return feature_vector
