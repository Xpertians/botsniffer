import pycodestyle

def calculate_style_guide_adherence(parsed_code):
    """
    Calculates the adherence of the parsed code to PEP 8 style guidelines.

    Args:
        parsed_code: The parsed code object generated by the ast.parse() function.

    Returns:
        A float value indicating the degree of adherence to PEP 8 style guidelines (between 0 and 1).
    """
    # Read the PEP 8 guidelines and extract the relevant rules
    with open("path/to/pep8.txt", "r") as f:
        pep8_rules = [rule.strip() for rule in f.readlines() if rule.startswith("- ")]

    # Initialize the style checker
    style_checker = pycodestyle.StyleGuide(ignore=["E402"])

    # Check the adherence to each PEP 8 rule
    violations = 0
    for rule in pep8_rules:
        # Extract the rule code and description
        rule_code, rule_desc = rule.split(" ", 1)

        # Check for violations of the rule
        results = style_checker.check_ast(parsed_code, extra_ignore=[rule_code])
        if results.get_count() > 0:
            violations += 1

    # Calculate the degree of adherence to PEP 8 guidelines
    adherence = 1 - (violations / len(pep8_rules))

    return adherence
